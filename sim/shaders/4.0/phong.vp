#version 400

in vec3 vertex_position;
in vec3 vertex_normal;

uniform mat4 model;
uniform vec3 color_specular, color_diffuse, color_ambient;

layout (std140) uniform cam_block { 
       mat4 proj; 
       mat4 view; 
};

out vec3 position_eye, normal_eye, color;
out vec3 Ks, Kd, Ka;

void main () {
  vec4 vertex_position2 = vec4(vertex_position, 1.0);
  vertex_position2[2] = vertex_position[2]*-1;

    position_eye = vec3(view * vertex_position2);
    normal_eye = vec3 (view * vec4(vertex_normal, 0.0));

    gl_Position = proj * vec4(position_eye, 1.0);
	Ks = color_specular;
	Kd = color_diffuse;
	Ka = color_ambient;
}


